#!/usr/bin/env node

var app     = require('http').createServer(handler),
    fs      = require('fs'),
    Grapher = require('../lib/grapher.js'),
    fn      = require('../lib/functions.js'),
    _       = require('underscore')._;

function handler(req, res) {
  var rtn = [], grapher, queryUrl, options;

  // if the request if for a favicon, ignore it.
  if (req.url === '/favicon.ico') {
    res.end();
    return;
  }

  // if the root is requested then display instructions.
  if (req.url === '/') {
    res.writeHead(200, {'Content-Type': 'text/html'});
    fs.readFile(__dirname + '/../static/index.html', function (err, page) {
      if (err) throw err;
      res.end(page);
    });
    return;
  }

  // build the url that socialgraph will query against
  var query = require('url').parse(req.url, true).query;

  if (_.isEmpty(query)) {
    queryUrl = req.url.substring(1);
  } else {
    if (query.url) {
      queryUrl = query.url;
    } else {
      res.writeHead(400, {'Content-Type': 'application/json; charset=utf-8'});
      var error = JSON.stringify({
        errors: "'url' is a required parameter"
      });
      error = query.callback ? query.callback + '(' + error + ');' : error;
      res.end(error);
      return;
    }
  }

  // build the options object
  options = {}
  if (query.strict !== undefined) {
    options.strict = (query.strict === 'true')? true : false;
  } else {
    options.strict = false;
  }


  grapher = Grapher.graph(queryUrl, options);
  grapher.done(function(graph) {
    respond(res, graph.toJSON(), query.callback);
  });


  
}

function respond (res, json, callback) {
  res.writeHead(200, {'Content-Type': 'application/json; charset=utf-8'});
  if (callback) {
    res.end(callback + '(' + json + ');');
  } else {
    res.end(json);
  }
}



app.listen(8888, 'localhost');

console.log('App @ http://localhost:8888');